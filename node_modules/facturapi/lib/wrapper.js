"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createWrapper = void 0;
const constants = require("./constants");
const constants_1 = require("./constants");
const axios_1 = require("axios");
const safe_buffer_1 = require("safe-buffer");
const responseInterceptor = function (response) {
    return response;
};
const errorInterceptor = function (error) {
    var _a, _b;
    if (error.isAxiosError) {
        return Promise.reject(new Error(((_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.message) || error.message));
    }
    else {
        return Promise.reject(new Error(error.message));
    }
};
function encodeStringToBase64(text) {
    // Make sure text is a string
    text = text.toString();
    return safe_buffer_1.Buffer.from(text).toString('base64');
}
const createWrapper = (apiKey, apiVersion = constants_1.DEFAULT_API_VERSION) => {
    const client = axios_1.default.create({
        baseURL: apiVersion === 'v1' ? constants.BASE_URL_V1 : constants.BASE_URL,
        headers: {
            Authorization: `Basic ${encodeStringToBase64(apiKey + ':')}`,
            'Content-Type': 'application/json',
        },
    });
    client.interceptors.response.use(responseInterceptor, errorInterceptor);
    return client;
};
exports.createWrapper = createWrapper;
